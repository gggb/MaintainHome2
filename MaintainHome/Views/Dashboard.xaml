<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MaintainHome.Views.Dashboard"
             x:Name="DashboardPage"
             BackgroundColor="{StaticResource BackgroundColor}"
             Title="Dashboard">

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Search" IconImageSource="search_icon.png" Clicked="OnSearchIconClicked"/>
        <ToolbarItem Text="Toggle Unscheduled" IconImageSource="unschedule.png" Clicked="OnToggleUnscheduledClicked"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <StackLayout Padding="10">
            <!-- Search Box -->
            <StackLayout x:Name="SearchBox" IsVisible="False" Padding="10" Margin="0,-20,0,0">
                <Label Text="Search Criteria" FontAttributes="Bold" Margin="0,15,0,0"/>
                <!-- Search Box First Row: Status and Priority -->
                <StackLayout Orientation="Horizontal" Margin="0,-5,0,0">
                    <Label Text="Status:" VerticalOptions="Center" Margin="10,0,0,0"/>
                    <Picker x:Name="StatusPicker" WidthRequest="95" Margin="0,0,15,0">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>None</x:String>
                                <x:String>Unscheduled</x:String>
                                <x:String>Scheduled</x:String>
                                <x:String>Completed</x:String>
                                <x:String>Canceled</x:String>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                    <Label Text="Priority:" VerticalOptions="Center" Margin="0,0,0,0"/>
                    <Picker x:Name="PriorityPicker" WidthRequest="60">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>None</x:String>
                                <x:String>Low</x:String>
                                <x:String>Medium</x:String>
                                <x:String>Urgent</x:String>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                </StackLayout>
                <!-- Search Box Second Row: Due Date Start and Due Date End -->
                <StackLayout Orientation="Horizontal" Margin="10,-15,0,0">
                    <Label Text="DueDate Range:" VerticalOptions="Center"/>
                    <DatePicker x:Name="DueDateStartPicker" Format="MM/dd/yyyy" WidthRequest="87" Margin="0,0,0,0"/>
                    <Label Text="-" VerticalOptions="Center" Margin="0,0,5,0"/>
                    <DatePicker x:Name="DueDateEndPicker" Format="MM/dd/yyyy" WidthRequest="87" Margin="0,0,0,0"/>
                    <ImageButton Source="Reset_Icon.png" Clicked="OnResetDatesButtonClicked" WidthRequest="30" HeightRequest="30" Margin="10,0,0,0"/>
                </StackLayout>
                <!-- Search Box Third Row: User ID and Category ID -->
                <StackLayout Orientation="Horizontal" Margin="10,-15,0,0">
                    <Label Text="User:" VerticalOptions="Center"/>
                    <Picker x:Name="UserIdPicker" WidthRequest="100" Margin="0,0,20,0"/>
                    <Label Text="Category ID:" VerticalOptions="Center"/>
                    <Picker x:Name="CategoryPicker" WidthRequest="90"/>
                </StackLayout>
                <Button Text="Search" Clicked="OnSearchButtonClicked" WidthRequest="150" />
            </StackLayout>
            <!-- Header Label -->
            <!-- Header with Traffic Light -->
            <StackLayout Orientation="Horizontal" HorizontalOptions="Center" Margin="0, -10, 0, 15">
                <StackLayout Orientation="Horizontal" HorizontalOptions="Start">
                    <Image x:Name="RedLight" Source="Resources/Images/red_light.png" IsVisible="False" Margin="0,0,0,0" WidthRequest="50" HeightRequest="50" />
                    <Image x:Name="YellowLight" Source="Resources/Images/yellow_light.png" IsVisible="False" WidthRequest="75" HeightRequest="75" />
                    <Image x:Name="GreenLight" Source="Resources/Images/green_light.png" IsVisible="False" WidthRequest="50" HeightRequest="50" />
                </StackLayout>
                <StackLayout Orientation="Vertical" Margin="0,0,0,0">
                    <Label Text="Maintenance Tasks" FontSize="24" FontAttributes="Bold" Margin="0, 10, 0, 0" />
                    <Label x:Name="OverdueAlertExplanation" Text="⚠️ indicates overdue tasks" FontSize="14" TextColor="Gray" Margin="0, 0, 0, 0" />
                </StackLayout>
            </StackLayout>
            <!-- CollectionView for tasks -->
            <CollectionView x:Name="TaskCollectionView" ItemsSource="{Binding AllTasks}" SelectionMode="Single">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <SwipeView>
                            <SwipeView.RightItems>
                                <SwipeItems>
                                    <SwipeItem Text="Edit" Invoked="OnEditTaskSwiped" BackgroundColor="LightGray"/>
                                </SwipeItems>
                            </SwipeView.RightItems>
                            <StackLayout Margin="10,5" IsVisible="{Binding IsVisible}">
                                <Label Text="{Binding Title}" MaxLines="1" FontSize="Medium" TextColor="Black">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer NumberOfTapsRequired="1"  
                                            Command="{Binding Source={x:Reference DashboardPage}, Path=BindingContext.OnTaskDoubleTapped}" 
                                            CommandParameter="{Binding .}" />
                                    </Label.GestureRecognizers>
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Status}" Value="Unscheduled">
                                            <Setter Property="TextDecorations" Value="Strikethrough" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <StackLayout Orientation="Horizontal" HorizontalOptions="Start">
                                    <Label Text="{Binding Status}" FontSize="Small" TextColor="Gray"/>
                                    <Label Text=" | " FontSize="Small" TextColor="Gray"/>
                                    <Label Text="{Binding DueDate, StringFormat='{0:MM/dd/yyyy}'}" FontSize="Small" TextColor="Gray"/>
                                </StackLayout>
                            </StackLayout>
                        </SwipeView>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <!-- Button at the Bottom -->
            <Button Text="Schedule New Task"
                    HorizontalOptions="Center"
                    VerticalOptions="End"
                    Clicked="OnAddTaskButtonClicked"
                    Margin="0, 20, 0, 10"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>
